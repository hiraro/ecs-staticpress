service: ecs-staticpress-lambda

plugins:
  - serverless-dynamodb-ttl

custom:
  defaultStage: dev
  profiles:
    dev: develop
    prod: develop
  dynamodb:
    ttl:
      - table: test_ecs_wp_access_log
        field: expiration

provider:
  name: aws
  region: ap-northeast-1
  stage: ${opt:stage, self:custom.defaultStage}
  profile: ${self:custom.profiles.${self:provider.stage}}
  runtime: nodejs8.10
  memorySize: 128
  timeout: 120
  environment:
    ECS_CLUSTER_NAME: "TEST-WP-ECS-FARGATE"
    ECS_WP_SERVICE_NAME: "wp"
    DYNAMODB_ACCESS_LOG_TABLE: "test_ecs_wp_access_log"
    ECS_WP_TASK_DEF_ARN_PREFIX: "arn:aws:ecs:ap-northeast-1:xxxxxxxxxxxx:task-definition/TEST-WP-ECS-FARGATE"
    ECS_WP_TASK_STAT_RUNNING: "RUNNING"
    R53_HOSTED_ZONE_ID: "XXXXXXXXXXXX"
    R53_ECS_WP_BACK_DNS_NAME: "back.testecswp.example.com"
    DYNAMODB_ACCESS_LOG_TTL_SEC: 1800


package:
  individually: true
  exclude:
    - src/**

functions:
  append-wpadmin-access_log:
    handler: src/append-wpadmin-access_log/app.lambda_handler
    role: AppendWpadminAccessLogRole
    events:
      - sns: AppendWpadminAccessLogTopic
    package:
      include:
        - src/append-wpadmin-access_log/**
  launch-ecs-wp-task:
    handler: src/launch-ecs-wp-task/app.lambda_handler
    role: LaunchEcsWpTaskRole
    events:
      - sns: LaunchEcsWpTaskTopic
    package:
      include:
        - src/launch-ecs-wp-task/**
    environment:
      ECS_DESIRED_WP_TASK_COUNT: 1
  stop-ecs-wp-task:
    handler: src/stop-ecs-wp-task/app.lambda_handler
    role: StopEcsWpTaskRole
    events:
      - schedule:
          name: ecs_wp_task_stop_timer
          rate: rate(30 minutes)
    package:
      include:
        - src/stop-ecs-wp-task/**
    environment:
      ECS_DESIRED_WP_TASK_COUNT: 0
  on-ecs-wp-task-started:
    handler: src/on-ecs-wp-task-started/app.lambda_handler
    role: OnEcsWpTaskStartedRole
    events:
      - cloudwatchEvent:
          name: 'on-ecs-wp-task-state-change'
          event:
            source:
              - "aws.ecs"
            detail-type:
              - "ECS Task State Change"
            detail:
              clusterArn:
                - "arn:aws:ecs:ap-northeast-1:xxxxxxxxxxxx:cluster/TEST-WP-ECS-FARGATE"
    package:
      include:
        - src/on-ecs-wp-task-started/**

# TODO Restrict strictly......
resources:
  Resources:
    AppendWpadminAccessLogRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: AppendWpadminAccessLogRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - sns.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess

    LaunchEcsWpTaskRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: LaunchEcsWpTaskRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - sns.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          - arn:aws:iam::aws:policy/AmazonECS_FullAccess

    DynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: test_ecs_wp_access_log
        KeySchema:
          - AttributeName: req_id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: req_id
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    StopEcsWpTaskRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: StopEcsWpTaskRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - events.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          - arn:aws:iam::aws:policy/AmazonECS_FullAccess

    OnEcsWpTaskStartedRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: OnEcsWpTaskStartedRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - events.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          - arn:aws:iam::aws:policy/AmazonECS_FullAccess
          - arn:aws:iam::aws:policy/AmazonRoute53FullAccess
